<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>roster | On Call Life</title>
    <link>/tags/roster/</link>
      <atom:link href="/tags/roster/index.xml" rel="self" type="application/rss+xml" />
    <description>roster</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Fri, 13 Mar 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>roster</title>
      <link>/tags/roster/</link>
    </image>
    
    <item>
      <title>Creating an On-call Roster Using Azure Table Storage</title>
      <link>/post/creating-an-oncall-roster-using-azure-table-storage/</link>
      <pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/post/creating-an-oncall-roster-using-azure-table-storage/</guid>
      <description>&lt;p&gt;On-call rosters allow teams to identify who is responsible for acknowledging and addressing incidents as they occur.&lt;/p&gt;
&lt;p&gt;They are made up of the names and contact information of everyone expected to take part in the response and remediation of service disruptions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;On-call Roster&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Email&lt;/th&gt;
&lt;th&gt;Service&lt;/th&gt;
&lt;th&gt;On-call&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Jason Hand&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:jason@xyz.com&#34;&gt;jason@xyz.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;API&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Chris Smith&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:chris@xyz.com&#34;&gt;chris@xyz.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;API&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lauren Jones&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:lauren@xyz.com&#34;&gt;lauren@xyz.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mobile&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ryan Boggs&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:ryan@xyz.com&#34;&gt;ryan@xyz.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Database&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Depending on the make up of your teams and services, on-call rosters can remain quite simple or become extremely complex.&lt;/p&gt;
&lt;p&gt;One way of creating an on-call roster is with a basic storage table in Azure.&lt;/p&gt;
&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    First, login or create a &lt;a href=&#34;https://azure.microsoft.com/?wt.mc_id=oncalllife-blog-jahand&#34;&gt;free Azure account&lt;/a&gt;.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Create a new resource
From the home screen in Azure, select the option to &lt;strong&gt;create a resource&lt;/strong&gt;.
&lt;img src=&#34;create-a-resource.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Search for and select &amp;ldquo;&lt;strong&gt;Storage Account&lt;/strong&gt;&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;create-storage-account.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Select a &lt;strong&gt;subscription&lt;/strong&gt;, &lt;strong&gt;resource group&lt;/strong&gt;, etc.&lt;/p&gt;
&lt;p&gt;Choose where you want the storage account created, what name you want to give it, as well as the type of disk and access tiers and then choose &lt;strong&gt;Review &amp;amp; Create&lt;/strong&gt;, followed by &lt;strong&gt;Create&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Go to the (&lt;strong&gt;Storage Account&lt;/strong&gt;) resource&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Click on the &lt;strong&gt;Tables&lt;/strong&gt; card
&lt;img src=&#34;click-on-tables-card.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; Click the &lt;strong&gt;+ Table&lt;/strong&gt; option and give it a name of &lt;code&gt;oncall&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;create-on-call-table.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7.&lt;/strong&gt; Click on &lt;strong&gt;Storage Exploror&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8.&lt;/strong&gt; Click on &lt;strong&gt;Tables&lt;/strong&gt;, then &lt;strong&gt;oncall&lt;/strong&gt;, then &lt;strong&gt;+ Add&lt;/strong&gt;
&lt;img src=&#34;open-oncall-table.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9.&lt;/strong&gt; Add &lt;strong&gt;entity&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;PartitionKey&lt;/strong&gt; field will remain the same. Add new properties for &lt;strong&gt;name&lt;/strong&gt;, &lt;strong&gt;email&lt;/strong&gt;, &lt;strong&gt;service&lt;/strong&gt;, and &lt;strong&gt;oncall&lt;/strong&gt;. All properties should be set to a &lt;em&gt;string&lt;/em&gt; type, except for &lt;strong&gt;oncall&lt;/strong&gt;. It is a boolean. Once all fields have been added, press &lt;strong&gt;Insert&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;add-table-entity.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10.&lt;/strong&gt; Repeat the process for new entities.
Make sure to use the same PartitionKey but a unique rowkey. Also be sure to use true or false for the oncall field.&lt;/p&gt;
&lt;p&gt;After a couple of entries, it should look as follows.
&lt;img src=&#34;on-call-table-entries.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s it. You&amp;rsquo;ve taken your first steps towards building a basic on-call roster. This will help us identify who to initially alert when an incident occurs.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    This example roster tracks only the &amp;ldquo;&lt;strong&gt;Primary Responder&lt;/strong&gt;&amp;rdquo; (i.e. &lt;code&gt;oncall=true or false&lt;/code&gt;). It doesn&amp;rsquo;t include any alternative contact information. Nor does it identify what rotations someone is associated with.
&lt;br /&gt;&lt;br /&gt;
Try expanding your roster to contain more of the roles previously discussed.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Next, we will take a look at 
&lt;a href=&#34;/post/establishing-oncall-rotations/&#34;&gt;Establishing On-call Rotations&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Establishing On-call Rosters</title>
      <link>/post/establishing-oncall-rosters/</link>
      <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/post/establishing-oncall-rosters/</guid>
      <description>&lt;p&gt;Rosters establish a framework around who is on-call at any given point. A roster, or team, is made up of multiple engineers. Rosters can also contain multiple rotations. I&amp;rsquo;m testing out how to edit a page.&lt;/p&gt;
&lt;h2 id=&#34;next-steps&#34;&gt;Next steps&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;/post/creating-an-oncall-roster-using-azure-table-storage/&#34;&gt;Creating an on-call roster using Azure Table Storage&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
